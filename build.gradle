plugins {
    id 'java'
    id 'checkstyle'
    id 'maven'
    id 'signing'
}

group 'dev.natsuume.knp4j'
version '1.1.0'

sourceCompatibility = 1.12

repositories {
    mavenCentral()
}

dependencies {
    testImplementation('org.junit.jupiter:junit-jupiter:5.5.2')

    // https://mvnrepository.com/artifact/com.google.guava/guava
    implementation("com.google.guava:guava:28.1-jre")

    // https://mvnrepository.com/artifact/io.vavr/vavr
    compile group: 'io.vavr', name: 'vavr', version: '1.0.0-alpha-3'

}

checkstyle {
    toolVersion = '8.24'
    configFile = file('config/google_checks.xml')
    configProperties = [
            'checkstyle.cache.file': "${buildDir}/checkstyle.cache",
    ]
    ignoreFailures = false
    showViolations = true
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
    }
    workingDir rootDir
}

task javadocJar(type: Jar) {
    classifier 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment {
                MavenDeployment deployment -> signing.signPom(deployment)
            }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: project.ossrhUsername, password: project.ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: project.ossrhUsername, password: project.ossrhPassword)
            }

            pom.project {
                name 'knp4j'
                packaging 'jar'
                artifactId 'knp4j'

                description 'This is the wrapper that call KNP( Japanese morpheme, dependency, case analyzer ) in Java.'
                url 'https://github.com/Natsuume/knp4j.git'

                scm {
                    connection 'scm:git:https://github.com/Natsuume/knp4j.git'
                    developerConnection 'scm:git:https://github.com/Natsuume/knp4j.git'
                    url 'https://github.com/Natsuume/knp4j'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'natsuume'
                        name 'natsuume'
                        email 'natsuume@natsuume.dev'
                    }
                }
            }
        }
    }
}